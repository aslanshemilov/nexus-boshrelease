---
resources:
- name: repo
  type: git
  source:
    uri: git@github.com:making/nexus-boshrelease.git
    branch: master
    private_key: {{github-private-key}}
- name: repo-version
  type: semver
  source:
    uri: git@github.com:making/nexus-boshrelease.git
    branch: version
    private_key: {{github-private-key}}
    file: version
    driver: git
- name: gh-release
  type: github-release
  source:
    user: making
    repository: nexus-boshrelease
    access_token: {{github-access-token}}

jobs:
- name: bosh-deploy-dev-in-docker
  serial: true
  plan:
  - aggregate:
    - get: repo
      # trigger: true
  - task: download-blobs
    config:
      <<: *DOWNLOAD_BLOBS
  - task: bosh-create-release
    config:
      <<: *BOSH_CREATE_RELEASE
  - task: bosh-deploy
    privileged: true
    params:
      RELEASE_NAME: nexus
      IS_DOCKER: true
    config:
      <<: *BOSH_DEPLOY
- name: bosh-deploy-dev-in-exsiting-env
  serial: true
  plan:
  - aggregate:
    - get: repo
      trigger: true
  - task: download-blobs
    config:
      <<: *DOWNLOAD_BLOBS
  - task: bosh-create-release
    config:
      <<: *BOSH_CREATE_RELEASE
  - task: bosh-deploy
    params:
      RELEASE_NAME: nexus
      IS_DOCKER: false
      <<: *BOSH
    config:
      <<: *BOSH_DEPLOY
- name: ship-it
  serial: true
  plan:
  - aggregate:
    - get: repo
      # passed:
      # - bosh-deploy-dev-in-exsiting-env
      # - bosh-deploy-dev-in-docker
    - get: repo-version
  - task: download-blobs
    config:
      <<: *DOWNLOAD_BLOBS
  - task: create-release
    params:
      <<: *BOSH
      GIT_EMAIL: {{git-email}}
      GIT_NAME: {{git-name}}
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: bosh/main-bosh-docker
      inputs:
      - name: repo
      - name: repo-version
      - name: compiled
      outputs:
      - name: releases
      - name: updated-repo
      run:
        path: bash
        args:
        - -c
        - |
          set -e
          cd repo
          shopt -s dotglob
          cp -r ./* ../updated-repo
          rm -rf .final_builds releases
          VERSION=`cat ../repo-version/number`
          TARBALL=nexus-boshrelease-${VERSION}.tgz
          bosh add-blob ../compiled/java/openjdk-1.8.0_162.tar.gz java/openjdk-1.8.0_162.tar.gz
          bosh add-blob ../compiled/nexus/nexus-3.6.2-01-unix.tar.gz nexus/nexus-3.6.2-01-unix.tar.gz
          bosh create-release --force --version=${VERSION} --final --tarball=../releases/${TARBALL}
          SHA1=`sha1sum ../releases/${TARBALL} | awk '{print $1}'`
          mkdir -p .sha1
          echo ${SHA1} > .sha1/${VERSION}
          cp -r ./* ../updated-repo
          cd ../updated-repo
          git config --global user.email "${GIT_EMAIL}"
          git config --global user.name "${GIT_NAME}"
          git add -A
          git commit -m "Release ${VERSION}"
          # Release Note
          cat <<EOF > ../releases/note.md
          ## Deployment
          \`\`\` yaml
          # manifest.yml
          ---
          name: nexus
          releases:
          - name: nexus
            version: ${VERSION}
            url: https://github.com/making/nexus-boshrelease/releases/download/${VERSION}/${TARBALL}
            sha1: ${SHA1}
          \`\`\`
          EOF
  - put: repo
    params:
      repository: updated-repo
      tag: repo-version/number
  - put: gh-release
    params:
      name: repo-version/number
      tag: repo-version/number
      body: releases/note.md
      globs:
      - releases/*.tgz

########################################

- name: bump-to-next-patch-version
  plan:
  - aggregate:
    - get: repo
      trigger: true
      passed:
      - ship-it
    - get: repo-version
      params:
        bump: patch
  - put: repo-version
    params:
      file: repo-version/number

- name: bump-to-next-minor-version
  plan:
  - aggregate:
    - get: repo-version
      params:
        bump: minor
  - put: repo-version
    params:
      file: repo-version/number

- name: bump-to-next-majar-version
  plan:
  - aggregate:
    - get: repo-version
      params:
        bump: majar
  - put: repo-version
    params:
      file: repo-version/number

params:
  bosh: &BOSH
    BOSH_CLIENT: {{bosh-client}}
    BOSH_ENVIRONMENT: {{bosh-environment}}
    BOSH_CLIENT_SECRET: {{bosh-client-secret}}
    BOSH_CA_CERT: {{bosh-ca-cert}}
tasks:
  download-blobs: &DOWNLOAD_BLOBS
    platform: linux
    image_resource:
      type: docker-image
      source:
        repository: bosh/main-bosh-docker
    inputs:
    - name: repo
    outputs:
    - name: compiled
    caches:
    - path: repo/blobs
    - path: repo/.download
    run:
      path: bash
      args: 
      - -c
      - |
        set -e
        cd repo
        ./add-blobs.sh
        cp -ra blobs/* ../compiled/
        find ../compiled  
  bosh-create-release: &BOSH_CREATE_RELEASE
    platform: linux
    image_resource:
      type: docker-image
      source:
        repository: bosh/main-bosh-docker
    inputs:
    - name: repo
    - name: compiled
    outputs:
    - name: releases
    run:
      path: bash
      args: 
      - -c
      - |
        set -e
        cd repo
        bosh add-blob ../compiled/java/openjdk-1.8.0_162.tar.gz java/openjdk-1.8.0_162.tar.gz
        bosh add-blob ../compiled/nexus/nexus-3.6.2-01-unix.tar.gz nexus/nexus-3.6.2-01-unix.tar.gz
        rm -rf .final_builds releases
        bosh create-release --name=nexus-dev --force --timestamp-version --tarball=../releases/nexus-boshrelease.tgz
  bosh-deploy: &BOSH_DEPLOY
    platform: linux
    image_resource:
      type: docker-image
      source:
        repository: bosh/main-bosh-docker
    inputs:
    - name: repo
    - name: releases
    caches:
    - path: repo/.bosh
    run:
      path: bash
      args: 
      - -c
      - |
        set -e
        echo "======"
        VM_TYPE=small
        if [ "${IS_DOCKER}" == "true" ];then
          echo "Starting bosh..."
          rm -rf ~/.bosh
          ln -fs $(pwd)/repo/.bosh ~/.bosh
          start-bosh
          source /tmp/local-bosh/director/env
          VM_TYPE=default
          bosh upload-stemcell https://bosh.io/d/stemcells/bosh-warden-boshlite-ubuntu-trusty-go_agent?v=3445.11
        fi
        bosh env
        bosh upload-release releases/*.tgz
        cd repo
        cat <<EOF > ops.yml
        - type: remove
          path: /instance_groups/name=${RELEASE_NAME}-dev/networks/0/static_ips
        - type: replace
          path: /instance_groups/name=${RELEASE_NAME}-dev/vm_type
          value: ${VM_TYPE}
        - type: replace
          path: /instance_groups/name=${RELEASE_NAME}-dev/jobs/name=nexus/properties/nexus/admin_password?
          value: ((nexus_admin_old_password))
        - type: replace
          path: /variables/-
          value:
            name: nexus_admin_old_password
            type: password
        EOF

        sed -i "s/${RELEASE_NAME}/${RELEASE_NAME}-dev/" manifest.yml
        sed -i "s/  - name: nexus-dev/  - name: nexus/" manifest.yml
        sed -i "s/  - name: nexus-dev-backup/  - name: nexus-backup/" manifest.yml
        sed -i "s/      nexus-dev:/      nexus:/" manifest.yml
        bosh -n deploy -d ${RELEASE_NAME}-dev <(bosh int manifest.yml -o ops.yml) -v internal_ip=10.244.0.34 --vars-store=creds.yml --no-redact
        bosh vms -d ${RELEASE_NAME}-dev
        ip=`bosh vms -d ${RELEASE_NAME}-dev | grep ${RELEASE_NAME} | awk '{print $4}'`

        PASSWORD=`bosh int creds.yml --path /nexus_admin_old_password`
        curl -u admin:${PASSWORD} -v -k https://${ip}:443/service/siesta/rest/v1/script

        cat <<EOF > ops.yml
        - type: remove
          path: /instance_groups/name=${RELEASE_NAME}-dev/networks/0/static_ips
        - type: replace
          path: /instance_groups/name=${RELEASE_NAME}-dev/jobs/name=nexus/properties/nexus/admin_password?
          value: ((nexus_admin_password))
        - type: replace
          path: /instance_groups/name=${RELEASE_NAME}-dev/jobs/name=nexus/properties/nexus/admin_old_password?
          value: ${PASSWORD}
        - type: replace
          path: /variables/-
          value:
            name: nexus_admin_password
            type: password
        EOF
        bosh -n deploy -d ${RELEASE_NAME}-dev <(bosh int manifest.yml -o ops.yml) -v internal_ip=10.244.0.34 --vars-store=creds.yml --no-redact
        curl -u admin:`bosh int creds.yml --path /nexus_admin_password` -v -k https://${ip}:443/service/siesta/rest/v1/script

        bosh -n delete-deployment -d ${RELEASE_NAME}-dev
